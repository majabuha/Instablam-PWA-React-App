{"ast":null,"code":"import _toConsumableArray from\"C:/Users/SlimthYoggi/Desktop/AWJ/12122021/Instablam-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/SlimthYoggi/Desktop/AWJ/12122021/Instablam-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/SlimthYoggi/Desktop/AWJ/12122021/Instablam-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export function cameraOff(videoElement){videoElement.srcObject=null;console.log('cameraOff',videoElement);}export function cameraOn(_x,_x2){return _cameraOn.apply(this,arguments);}function _cameraOn(){_cameraOn=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(context,videoElement){var constraints,stream;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:constraints={audio:false,video:{facingMode:'user',width:500,height:400}};_context.prev=1;_context.next=4;return navigator.mediaDevices.getUserMedia(constraints);case 4:stream=_context.sent;context.setVideoStream(stream);videoElement.srcObject=stream;videoElement.addEventListener('loadedmetadata',function(){videoElement.play();});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);console.log('Failed to get video. '+_context.t0.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return _cameraOn.apply(this,arguments);}export function takePicture(_x3,_x4,_x5){return _takePicture.apply(this,arguments);}function _takePicture(){_takePicture=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(videoStream,gallery,setGallery){var imageCapture,blob,picture,photoTakenTime,dateTimePhotoTaken,takenPicture;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(videoStream){_context2.next=5;break;}console.log(\"Camera off!\");return _context2.abrupt(\"return\",alert(\"Turn camera on to proceed!\"));case 5:_context2.prev=5;console.log(\"Taking picture!\");imageCapture=new ImageCapture(videoStream.getVideoTracks()[0]);_context2.next=10;return imageCapture.takePhoto();case 10:blob=_context2.sent;console.log(blob);picture=URL.createObjectURL(blob);photoTakenTime=photoTime();if(photoTakenTime.time&&photoTakenTime.date){dateTimePhotoTaken=photoTakenTime.date+\" \"+photoTakenTime.time;}else{dateTimePhotoTaken=\"Unknown time\";}_context2.t0=picture;_context2.next=18;return getGeolocation();case 18:_context2.t1=_context2.sent;if(_context2.t1){_context2.next=21;break;}_context2.t1=\"Location unknown\";case 21:_context2.t2=_context2.t1;_context2.t3=dateTimePhotoTaken;takenPicture={url:_context2.t0,class:\"gallery\",alt:\"Instablam photo\",location:_context2.t2,dateTimePhotoTaken:_context2.t3};console.log(takenPicture);console.log(gallery);setGallery([].concat(_toConsumableArray(gallery),[takenPicture]));_context2.next=32;break;case 29:_context2.prev=29;_context2.t4=_context2[\"catch\"](5);console.log(\"Error occured! '\".concat(_context2.t4.message,\"'.\"));case 32:case\"end\":return _context2.stop();}}},_callee2,null,[[5,29]]);}));return _takePicture.apply(this,arguments);}export function getGeolocation(){return _getGeolocation.apply(this,arguments);}function _getGeolocation(){_getGeolocation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var geolocation;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return getImageGeolocation();case 3:geolocation=_context3.sent;_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.log(\"Location not available.\");case 9:return _context3.abrupt(\"return\",geolocation);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _getGeolocation.apply(this,arguments);}function getImageGeolocation(){return _getImageGeolocation.apply(this,arguments);}function _getImageGeolocation(){_getImageGeolocation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",new Promise(function(resolve,reject){if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(function(position){var coordinates=\"\".concat(position.coords.latitude,\", \\n                    \").concat(position.coords.longitude);console.log(coordinates);resolve(coordinates);},function(error){return reject(error);});}else{console.log(\"Need permission to use location!\");}}));case 1:case\"end\":return _context4.stop();}}},_callee4);}));return _getImageGeolocation.apply(this,arguments);}function photoTime(){var currentdate=new Date();var date=currentdate.getDate()+\".\"+(currentdate.getMonth()+1)+\".\"+currentdate.getFullYear();var time=currentdate.getHours()+\":\"+currentdate.getMinutes();return{date:date,time:time};}// async function getImageGeolocation() {\n//             if (\"geolocation\" in navigator) {    \n//                 const city = await navigator.geolocation.getCurrentPosition(lookupPosition)  \n//                 return city\n//             }  else {\n//                 alert(\"Need permission to use location!\");\n//             }\n//     }\n//     async function lookupPosition(position) {\n//         let latitude = position.coords.latitude;\n//         let longitude = position.coords.longitude;\n//         console.log(latitude, longitude)\n//         try {\n//             const response = await fetch(`https://geocode.xyz/${latitude},${longitude}?geoit=json`)\n//             const data = await response.json()\n//             if (data.error) {\n//     \t\t\tconsole.log(\"Couldn't get position<br>\" + data.error.message ) \n//                 return null\n//             }\n//             console.log(data.city)\n//             return data.city\n//         } catch (error) {\n//             console.log( \"Couldn't get position\" + error.message)\n//             return null\n//         }\n//     }","map":{"version":3,"sources":["C:/Users/SlimthYoggi/Desktop/AWJ/12122021/Instablam-app/src/components/utils/mediaUtils.js"],"names":["cameraOff","videoElement","srcObject","console","log","cameraOn","context","constraints","audio","video","facingMode","width","height","navigator","mediaDevices","getUserMedia","stream","setVideoStream","addEventListener","play","message","takePicture","videoStream","gallery","setGallery","alert","imageCapture","ImageCapture","getVideoTracks","takePhoto","blob","picture","URL","createObjectURL","photoTakenTime","photoTime","time","date","dateTimePhotoTaken","getGeolocation","takenPicture","url","class","alt","location","getImageGeolocation","geolocation","Promise","resolve","reject","getCurrentPosition","position","coordinates","coords","latitude","longitude","error","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes"],"mappings":"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","sourcesContent":["export function cameraOff(videoElement) {\n    videoElement.srcObject = null\n    console.log('cameraOff', videoElement);\n}\n\nexport async function cameraOn(context, videoElement) {\n    const constraints = {\n        audio: false,\n        video: {\n            facingMode: 'user',\n            width: 500,\n            height: 400\n        }\n    }\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia(constraints)\n        context.setVideoStream(stream)\n        videoElement.srcObject = stream\n        videoElement.addEventListener('loadedmetadata', () => {\n            videoElement.play()\n        })\n    } catch (error) {\n        console.log('Failed to get video. ' + error.message);\n    }\n}\n\nexport async function takePicture(videoStream, gallery, setGallery) {\n\n    if (!videoStream) {\n        console.log(\"Camera off!\")\n        return alert(\"Turn camera on to proceed!\")\n    } else {\n\n        try {\n            console.log(\"Taking picture!\")\n\n        const imageCapture = new ImageCapture(videoStream.getVideoTracks()[0])\n        let blob = await imageCapture.takePhoto()\n        console.log(blob)\n\n        const picture = URL.createObjectURL(blob)\n\n        const photoTakenTime = photoTime();\n        let dateTimePhotoTaken;\n        if (photoTakenTime.time && photoTakenTime.date) {\n            dateTimePhotoTaken = photoTakenTime.date + \" \" + photoTakenTime.time\n        } else {\n            dateTimePhotoTaken = \"Unknown time\";\n        }\n        const takenPicture = {\n            url: picture,\n            class: \"gallery\",\n            alt: \"Instablam photo\",\n            location: (await getGeolocation() || \"Location unknown\"),\n            dateTimePhotoTaken\n        }\n        console.log(takenPicture)\n        console.log(gallery)\n\n        setGallery([...gallery, takenPicture])\n\n        } catch (error) {\n            console.log(`Error occured! '${error.message}'.`);\n        }        \n    }\n}\n\nexport async function getGeolocation() {\n    let geolocation;\n    try {\n        geolocation = await getImageGeolocation()\n    } catch (error) {\n        console.log(\"Location not available.\")\n    }\n    return geolocation\n}\n\n\nasync function getImageGeolocation() {\n    return new Promise((resolve, reject) => {\n        if (\"geolocation\" in navigator) {\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const coordinates = `${position.coords.latitude}, \n                    ${position.coords.longitude}` \n                    console.log(coordinates)\n                    resolve(coordinates)\n                },\n                (error) => reject(error)\n            )\n\n        }  else {\n            console.log(\"Need permission to use location!\");\n        }\n       \n    })\n}\n\nfunction photoTime() {\n    const currentdate = new Date()\n    const date = currentdate.getDate() + \".\" +\n        (currentdate.getMonth() + 1) + \".\" + currentdate.getFullYear()\n    const time = currentdate.getHours() + \":\" + currentdate.getMinutes() \n    return { date, time }\n}\n\n// async function getImageGeolocation() {\n//             if (\"geolocation\" in navigator) {    \n//                 const city = await navigator.geolocation.getCurrentPosition(lookupPosition)  \n//                 return city\n//             }  else {\n//                 alert(\"Need permission to use location!\");\n//             }\n//     }\n    \n//     async function lookupPosition(position) {\n//         let latitude = position.coords.latitude;\n//         let longitude = position.coords.longitude;\n//         console.log(latitude, longitude)\n//         try {\n//             const response = await fetch(`https://geocode.xyz/${latitude},${longitude}?geoit=json`)\n//             const data = await response.json()\n//             if (data.error) {\n//     \t\t\tconsole.log(\"Couldn't get position<br>\" + data.error.message ) \n//                 return null\n//             }\n//             console.log(data.city)\n//             return data.city\n//         } catch (error) {\n//             console.log( \"Couldn't get position\" + error.message)\n//             return null\n//         }\n//     }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}